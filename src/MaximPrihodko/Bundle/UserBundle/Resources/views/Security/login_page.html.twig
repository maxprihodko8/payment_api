{% extends 'base.html.twig' %}

{#% block body %}
    <div>
        {% if is_granted("IS_AUTHENTICATED_REMEMBERED") %}
            {{ 'layout.logged_in_as'|trans({'%username%': app.user.username}, 'FOSUserBundle') }} |
            <a href="{{ path('fos_user_security_logout') }}">
                {{ 'layout.logout'|trans({}, 'FOSUserBundle') }}
            </a>
        {% else %}
            <a href="{{ path('fos_user_security_login') }}">{{ 'layout.login'|trans({}, 'FOSUserBundle') }}</a>
        {% endif %}
    </div>

    {% if app.request.hasPreviousSession %}
        {% for type, messages in app.session.flashbag.all() %}
            {% for message in messages %}
                <div class="flash-{{ type }}">
                    {{ message }}
                </div>
            {% endfor %}
        {% endfor %}
    {% endif %}

    <div>
        {% block fos_user_content %}
        {% endblock fos_user_content %}
    </div>

{% endblock %#}


{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" type="text/css" href="{{ asset("bundles/user/css/normalize.css") }}" />
    <link rel="stylesheet" type="text/css" href="{{ asset("bundles/user/css/demo.css") }}" />
    <link rel="stylesheet" type="text/css" href="{{ asset("bundles/user/css/component.css") }}" />
    <link rel="stylesheet" type="text/css" href="{{ asset("bundles/user/css/cs-select.css") }}" />
    <link rel="stylesheet" type="text/css" href="{{ asset("bundles/user/css/cs-skin-boxes.css") }}" />
{% endblock %}

{% block body %}
    {{ parent() }}

    <div class="container">

        <div class="fs-form-wrap" id="fs-form-wrap">
            {% include '@User/Security/login_content.html.twig' %}
        </div>

        <div class="related">
            <p>If you enjoyed this demo you might also like:</p>
            {% if app.request.hasPreviousSession %}
                {% for type, messages in app.session.flashbag.all() %}
                    {% for message in messages %}
                        <div class="flash-{{ type }}">
                            {{ message }}
                        </div>
                    {% endfor %}
                {% endfor %}
            {% endif %}
        </div>

    </div>

{% endblock %}


{% block javascripts %}
    {{ parent() }}

    <script src="{{ asset("bundles/user/js/modernizr.custom.js") }}"></script>
    <script src="{{ asset("bundles/user/js/classie.js") }}"></script>
    <script src="{{ asset("bundles/user/js/selectFx.js") }}"></script>
    <script src="{{ asset("bundles/user/js/fullscreenForm.js") }}"></script>
    <script src="{{ asset('bundles/user/js/login_form/login_form_validator.js') }}"></script>

    <script>
        (function() {
            var formWrap = document.getElementById( 'fs-form-wrap' );

            [].slice.call( document.querySelectorAll( 'select.cs-select' ) ).forEach( function(el) {
                new SelectFx( el, {
                    stickyPlaceholder: false,
                    onChange: function(val){
                        document.querySelector('span.cs-placeholder').style.backgroundColor = val;
                    }
                });
            } );

            new FForm( formWrap, {
                onReview : function() {
                    classie.add( document.body, 'overview' ); // for demo purposes only
                }
            } );
        })();
    </script>
    <script>
        (function() {
            // trim polyfill : https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/Trim
            if (!String.prototype.trim) {
                (function() {
                    // Make sure we trim BOM and NBSP
                    var rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
                    String.prototype.trim = function() {
                        return this.replace(rtrim, '');
                    };
                })();
            }

            [].slice.call( document.querySelectorAll( 'input.input__field' ) ).forEach( function( inputEl ) {
                // in case the input is already filled..
                if( inputEl.value.trim() !== '' ) {
                    classie.add( inputEl.parentNode, 'input--filled' );
                }

                // events:
                inputEl.addEventListener( 'focus', onInputFocus );
                inputEl.addEventListener( 'blur', onInputBlur );
            } );

            function onInputFocus( ev ) {
                classie.add( ev.target.parentNode, 'input--filled' );
            }

            function onInputBlur( ev ) {
                if( ev.target.value.trim() === '' ) {
                    classie.remove( ev.target.parentNode, 'input--filled' );
                }
            }
        })();
    </script>
{% endblock %}